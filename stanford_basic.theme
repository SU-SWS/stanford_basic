<?php

/**
 * @file
 * Preprocess functions for Stanford Basic.
 */

use Drupal\Core\Cache\CacheableMetadata;

/**
 * Prepares variables for the html.html.twig template.
 */
function stanford_basic_preprocess_html(&$variables) {
  try {
    $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  }
  catch (Exception $e) {
    // If the database is not yet available, set default values for these
    // variables.
    $variables['is_front'] = FALSE;
  }

  // If we're on the front page.
  if (!$variables['is_front']) {
    // Add unique classes for each page and website section.
    $path = \Drupal::service('path.current')->getPath();
    $alias = \Drupal::service('path.alias_manager')->getAliasByPath($path);
    $alias = trim($alias, '/');
    if (!empty($alias)) {
      $name = str_replace('/', '-', $alias);
      $variables['attributes']['class'][] = 'page-' . $name;
      list($section,) = explode('/', $alias, 2);
      if (!empty($section)) {
        $variables['attributes']['class'][] = 'section-' . $section;
      }
    }
  }

  // Add cachability metadata.
  $theme_name = \Drupal::theme()->getActiveTheme()->getName();
  $theme_settings = \Drupal::config($theme_name . '.settings');
  CacheableMetadata::createFromRenderArray($variables)
    ->addCacheableDependency($theme_settings)
    ->applyTo($variables);
  // Union all theme setting variables to the html.html.twig template.
  $variables += $theme_settings->getOriginal();

  // The base path.
  $variables['base_path'] = base_path();
}

/**
 * Prepares variables for the field.html.twig template.
 */
function stanford_basic_preprocess_field(&$variables, $hook) {
  // Make additional variables available to the template.
  $variables['bundle'] = $variables['element']['#bundle'];
}

/**
 * Prepares non node/panel pages to be in a single column.
 */
function stanford_basic_preprocess_page(&$vars) {

  // Only center the container if the page is not a node and not a panel.
  $pbag = \Drupal::routeMatch()->getParameters();
  $pkeys = $pbag->keys();
  $allowed = ['node', 'page_manager_page'];

  foreach ($allowed as $key) {
    if (in_array($key, $pkeys)) {
      return;
    }
  }

  // If a key is not found center the page.
  $vars['#attached']['library'][] = "stanford_basic/centered_container";
}

/**
 * Block template suggestions.
 * @param  array  $suggestions [description]
 * @param  array  $variables   [description]
 * @return [type]              [description]
 */
// function stanford_basic_theme_suggestions_block_alter(array &$suggestions, array $variables) {
//   $block = $variables['elements'];
//   $blockType = $block['#configuration']['provider'];
//   if ($blockType == "block_content") {
//     $bundle = $block['content']['#block_content']->bundle();
//     array_splice($suggestions, 2, 0, 'block__' . $bundle);
//   }
// }
